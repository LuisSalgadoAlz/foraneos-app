CREATE TYPE clasificacion AS ENUM (
    'activo',
    'pasivo',
    'patrimonio',
    'ingreso',
  'gasto'
);

CREATE TYPE naturaleza AS ENUM (
    'D',
    'C'
);

CREATE TYPE entrada AS ENUM (
    'I',
    'E'
);

CREATE TYPE tipocuenta AS ENUM (
    'cuenta',
    'subcuenta',
    'mixta' 
);

CREATE TYPE meses AS ENUM (
    'Enero',
    'Febrero',
    'Marzo',
    'Abril',
    'Mayo',
    'Junio',
    'Julio',
    'Agosto',
    'Septiembre',
    'Octubre',
    'Noviembre',
    'Diciembre'
);

CREATE TABLE cuenta (
    id SERIAL PRIMARY KEY,
    nombre VARCHAR NOT NULL,
    clasificacion clasificacion NOT NULL,
    naturaleza naturaleza NOT NULL,
    tipocuenta tipocuenta NOT NULL
);

CREATE TABLE transaccion (
    id SERIAL PRIMARY KEY,
    fecha DATE NOT NULL,
    descripcion TEXT NOT NULL
);

CREATE TABLE ingreso (
	id SERIAL PRIMARY KEY,
	cuenta_id INTEGER REFERENCES cuenta (id),
	transaccion_id INTEGER REFERENCES transaccion (id),
	monto NUMERIC(11,2) NOT NULL
);


CREATE TABLE gasto (
	id SERIAL PRIMARY KEY,
	cuenta_id INTEGER REFERENCES cuenta (id),
	transaccion_id INTEGER REFERENCES transaccion (id),
	monto NUMERIC(11,2) NOT NULL
);

CREATE TABLE detalle_transaccion (
    transaccion_id INTEGER REFERENCES transaccion (id),
    cuenta_id INTEGER REFERENCES cuenta (id),
    naturaleza naturaleza NOT NULL,
    monto NUMERIC(11,2) NOT NULL,
    PRIMARY KEY (transaccion_id, cuenta_id)
);

CREATE TABLE alumno (
    id SERIAL PRIMARY KEY,
    nombre VARCHAR NOT NULL,
    codigo INTEGER NOT NULL UNIQUE,
  	activo BOOLEAN NOT NULL DEFAULT false
);

CREATE TABLE mensualidad (
    id SERIAL PRIMARY KEY,
    alumno_id INTEGER REFERENCES alumno (id),
    mes meses NOT NULL,
    monto NUMERIC(11,2) NOT NULL,
    transaccion_id INTEGER REFERENCES transaccion (id)
);

CREATE TABLE usuarios(
	id SERIAL PRIMARY KEY,
  username VARCHAR(20) NOT NULL DEFAULT 'user',
  email VARCHAR(100) NOT NULL UNIQUE,
  password VARCHAR(100) NOT NULL,
  rol VARCHAR(20) NOT NULL DEFAULT 'admin'
);

